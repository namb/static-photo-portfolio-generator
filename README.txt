# üì∏ Static Portfolio Generator

Este proyecto genera un portafolio web est√°tico a partir de metadatos definidos en archivos JavaScript (`data.js` y `siteConfig.js`).

## üèóÔ∏è Estructura del Proyecto

/data
‚îú‚îÄ /collections
    ‚îú‚îÄ configuraci√≥n de las colecciones
‚îú‚îÄ data.js # Colecciones de im√°genes (No tocar: se genera y actualiza autom√°ticamente)
‚îî‚îÄ siteConfig.js # Configuraci√≥n del sitio

/nodeScripts
‚îú‚îÄ generateIndex.js
‚îú‚îÄ generateStaticPages.js
‚îú‚îÄ generateCollectionPages.js
‚îú‚îÄ generateAllGroupPages.js
‚îú‚îÄ generateGroupPage.js
‚îú‚îÄ generateSitemap.js
‚îú‚îÄ syncAll.js
‚îî‚îÄ templateUtils.js

/public
‚îî‚îÄ (salida generada autom√°ticamente)
‚îî‚îÄ /images # Carpetas de colecciones

/template
‚îî‚îÄ index.html # Plantilla base
‚îî‚îÄ collection.html # Plantilla de Colecciones
‚îî‚îÄ page.html # Plantilla para p√°ginas est√°ticas
‚îî‚îÄ groupPage.html # Plantilla para grupos de Colecciones
‚îî‚îÄ /partials
    ‚îî‚îÄ footer.html
    ‚îî‚îÄ header.html
    ‚îî‚îÄ menu.html
/assets
‚îî‚îÄ sass/ # Estilos SCSS

---

## üöÄ Comandos disponibles


### üñºÔ∏è Colecciones
npm run collections:sync         # Sincroniza las carpetas de im√°genes con data.js
npm run collections:sync:rename  # Igual, pero renombrando carpetas si es necesario
npm run collections:generate     # Genera HTML de cada colecci√≥n
npm run collections:build        # Sincroniza + genera

### üóÇÔ∏è Grupos
npm run groups:single     # Genera una p√°gina individual de grupo (requiere par√°metros)
npm run groups:generate   # Genera todas las p√°ginas de grupos
npm run groups:build      # Alias para generar todos los grupos

### üìÑ P√°ginas est√°ticas e √≠ndice
npm run pages:static      # Genera p√°ginas definidas como est√°ticas (por ejemplo: about.html)
npm run pages:index       # Genera el index.html desde la plantilla
npm run pages:sitemap     # Genera el sitemap.xml

### üîß Desarrollo
npm run css:dev          # Compila el SCSS sin minificar
npm run build:dev        # Genera sitio con estilos no minificados
npm run build:dev-force  # Fuerza la regeneraci√≥n completa

### üèóÔ∏è Producci√≥n
npm run css:build         # Compila y minifica el CSS
npm run build:site        # Genera todo menos CSS y sitemap
npm run build:site-force  # Igual que arriba, pero fuerza regeneraci√≥n (ignora hashes)
npm run build             # Build completo + sitemap

üåê Publicaci√≥n
El contenido generado en public/ est√° listo para ser desplegado en cualquier hosting est√°tico (GitHub Pages, Netlify, Vercel, etc.).

üì¶ Requisitos
Node.js >= 16
npm
Un IDE, tipo VSC
No es imprescindible, pero una cuenta en github donde poder subir los cambios a un repositorio privado que est√© conectado a Netlify facilita mucho la vida.

Instala dependencias: npm install

üìù Licencia
MIT. Usa, adapta y mejora este proyecto libremente.

üéûÔ∏è Hecho con amor por fot√≥grafos que tambi√©n escriben c√≥digo.

### Primeros pasos
1. Ejecuta **npm install** para instalar las dependencias
2. Ejecuta **npm run build:dev** para generar los html de test
3. **Abre** public/index.html en tu navegador para ver los cambios

### üñºÔ∏è C√≥mo agregar tu primera colecci√≥n de im√°genes

1. **Crea una carpeta** dentro de public/images/ con todas las im√°genes que formar√°n parte de la colecci√≥n. Por ejemplo: public/images/valencia
2. **Copia el fichero de ejemplo** desde data/collections/example.json y p√©galo en data/collections/, renombr√°ndolo con el mismo nombre que la carpeta. Por ejemplo: valencia.json.
3. **Rellena los metadatos** en ese archivo (title, description, coords, etc.). Este archivo define el contenido de la p√°gina de la colecci√≥n.
4. (Opcional) Si quieres renombrar las im√°genes como valencia1.jpg, valencia2.jpg, etc., ejecuta: npm run collections:sync:rename
5. **Genera el sitio** con: npm run build:dev Esto crear√° o actualizar√° el archivo index.html y la p√°gina HTML de la colecci√≥n.
6. **Abre** public/index.html en tu navegador para ver los cambios
7. Puedes crear un repositorio en github, subir el c√≥digo y conectarlo con netlify para que la carpeta /public se despliegue en tu sitio.

### Configuraci√≥n del sitio (/data/siteConfig.js)

metaTitle                   // <title> y Open Graph title por defecto
metaDescription             // <meta name="description"> y og:description
ogTitle                     // T√≠tulo para redes sociales (Open Graph)
ogDescription               // Descripci√≥n para redes sociales (Open Graph)
ogUrl                       // URL base del sitio para og:url
ogImage                     // Imagen para compartir en redes sociales (og:image)
logo                        // Ruta al logo mostrado en la cabecera
favicon                     // Ruta al favicon
title                       // T√≠tulo visible del sitio (cabecera)
showMap                     // Muestra/oculta el mapa interactivo en el index
showShuffleCollections      // Muestra opci√≥n de ordenar aleatoriamente las colecciones
showScrollToTop             // Muestra bot√≥n flotante para volver al inicio
ableDarkMode                // Activa/desactiva el modo oscuro
showTopBanner               // Muestra un banner informativo en la parte superior
topBannerContent            // HTML opcional para mostrar en el banner superior
rrss                        // Lista de redes sociales (nombre y URL)
staticPages                 // P√°ginas est√°ticas como "Sobre m√≠", etc.
showMenu                    // Muestra/oculta la navegaci√≥n superior
menu                        // √çtems del men√∫ (si `showMenu` est√° activo)
footerCopyright             // Listado enlaces en el footer
collectionDaysNew           // D√≠as desde la creaci√≥n para marcar una colecci√≥n como "nueva"
collectionsDaysUpdated      // D√≠as desde la √∫ltima actualizaci√≥n para marcar como "actualizada"
own_script                  // Script adicional que se inyectar√° al final de cada p√°gina

### Configuraci√≥n de una colecci√≥n (data/collections/)
title                       // T√≠tulo de la colecci√≥n
subtitle                    // Subt√≠tulo en la card (opcional)
description                 // Descripci√≥n en la p√°gina de colecci√≥n (opcional)
address                     // Direcci√≥n o ubicaci√≥n textual (opcional)
instagram                   // Usuario de Instagram (sin @)
camera                      // Informaci√≥n t√©cnica (opcional)
date                        // Fecha en la que fueron tomadas las fotos
published                   // Fecha de publicaci√≥n de la colecci√≥n yyyy-mm-dd
updated                     // Fecha de actualizaci√≥n de la colecci√≥n yyyy-mm-dd (opcional)
folder                      // Ruta a la carpeta de im√°genes
thumbnail                   // Imagen para usar en la card. Si no se especifica se utiliza la primera de images (opcional)
images                      // Lista de im√°genes de la colecci√≥n
targetPage                  // Listado de p√°ginas donde aparecer√° la colecci√≥n
coords                      // Coordenadas geogr√°ficas para insertar en el mapa (opcional)
disableCollection           // Si true, deshabilitar la publicaci√≥n de la colecci√≥n

### Configuraci√≥n de una p√°gina de colecciones (data/collections)

title                       // T√≠tulo de la p√°gina
coords                      // Coordenadas geogr√°ficas para insertar en el mapa (opcional)
subtitle                    // Subt√≠tulo en la card (opcional)
published                   // Fecha de publicaci√≥n yyyy-mm-dd
folder                      // Ruta a la carpeta de im√°genes
thumbnail                   // Imagen para usar en la card
isPage                      // Indica si se trata de una p√°gina que agrupa colecciones
targetPage                  // Listado de p√°ginas donde aparecer√° esta p√°gina